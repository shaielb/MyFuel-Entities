package db.entity.bridge;

import java.util.List;
import java.lang.Integer;
import java.lang.Boolean;
import db.interfaces.*;
import db.entity.SystemUser;
import java.sql.SQLException;
import java.lang.String;
import annotations.AutoGenerated;
import java.util.ArrayList;
import visitor.Visitor;

@AutoGenerated
public class SystemUserBridge implements IEntityBridge {

	private static final String TableName = "system_user";

	private static Object _lock = new Object();
	private static SystemUserBridge _instance;
	
	private SystemUserBridge() {}

	public static SystemUserBridge getInstance() {
		if (_instance == null) {
			synchronized(_lock) {
				if (_instance == null) {
					_instance = new SystemUserBridge();
				}
			}
		}
		return _instance;
	}

	public IEntity createEntity() {
		return new SystemUser();
	}

	@Override
	public void populateEntity(IEntity ientity, IGetValue<Integer, String, Object, Object> iterator) throws SQLException, InterruptedException {
		SystemUser entity = (SystemUser) ientity;
		entity.setId((Integer) iterator.get(0, "id", entity.getId()));
		entity.setUserName((String) iterator.get(1, "user_name", entity.getUserName()));
		entity.setUserPassword((String) iterator.get(2, "user_password", entity.getUserPassword()));
		entity.setOnlineStatus((Boolean) iterator.get(3, "online_status", entity.getOnlineStatus()));
		entity.setPermission((String) iterator.get(4, "permission", entity.getPermission()));
	}

	@Override
	public void collectFromEntity(IEntity ientity, ISetValue<Integer, String, Object> iterator) throws SQLException, InterruptedException {
		SystemUser entity = (SystemUser) ientity;
		iterator.set(0, "id", entity.getId());
		iterator.set(1, "user_name", entity.getUserName());
		iterator.set(2, "user_password", entity.getUserPassword());
		iterator.set(3, "online_status", entity.getOnlineStatus());
		iterator.set(4, "permission", entity.getPermission());
	}

	@Override
	public void accept(IEntity entity, Visitor visitor) {
		visitor.visit((SystemUser) entity);
	}

	@Override
	public String getTableName() {
		return TableName;
	}

	@Override
	public List<IEntity> getForeignEntities(IEntity ientity) {
		SystemUser entity = (SystemUser) ientity;
		List<IEntity> list = new ArrayList<IEntity>();

		return list;
	}
}
