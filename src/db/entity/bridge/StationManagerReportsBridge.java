package db.entity.bridge;

import java.util.List;
import java.lang.Integer;
import db.entity.Station;
import db.interfaces.*;
import db.entity.StationManagerReports;
import java.lang.Double;
import java.sql.SQLException;
import java.lang.String;
import annotations.AutoGenerated;
import java.util.ArrayList;
import db.entity.FuelEnum;
import visitor.Visitor;

@AutoGenerated
public class StationManagerReportsBridge implements IEntityBridge {

	private static final String TableName = "station_manager_reports";

	private static Object _lock = new Object();
	private static StationManagerReportsBridge _instance;
	
	private StationManagerReportsBridge() {}

	public static StationManagerReportsBridge getInstance() {
		if (_instance == null) {
			synchronized(_lock) {
				if (_instance == null) {
					_instance = new StationManagerReportsBridge();
				}
			}
		}
		return _instance;
	}

	public IEntity createEntity() {
		return new StationManagerReports();
	}

	@Override
	public void populateEntity(IEntity ientity, IGetValue<Integer, String, Object, Object> iterator) throws SQLException, InterruptedException {
		StationManagerReports entity = (StationManagerReports) ientity;
		entity.setId((Integer) iterator.get(0, "id", entity.getId()));
		entity.setReportType((String) iterator.get(1, "report_type", entity.getReportType()));
		entity.setReportQuarter((String) iterator.get(2, "report_quarter", entity.getReportQuarter()));
		entity.setReportYear((String) iterator.get(3, "report_year", entity.getReportYear()));
		entity.setAmount((Double) iterator.get(4, "amount", entity.getAmount()));
		entity.setPrice((Double) iterator.get(5, "price", entity.getPrice()));
		entity.setTotalPrice((Double) iterator.get(6, "total_price", entity.getTotalPrice()));
		entity.setFuelEnum((FuelEnum) iterator.get(7, "fuel_enum_fk", entity.getFuelEnum()));
		entity.setStation((Station) iterator.get(8, "station_fk", entity.getStation()));
	}

	@Override
	public void collectFromEntity(IEntity ientity, ISetValue<Integer, String, Object> iterator) throws SQLException, InterruptedException {
		StationManagerReports entity = (StationManagerReports) ientity;
		iterator.set(0, "id", entity.getId());
		iterator.set(1, "report_type", entity.getReportType());
		iterator.set(2, "report_quarter", entity.getReportQuarter());
		iterator.set(3, "report_year", entity.getReportYear());
		iterator.set(4, "amount", entity.getAmount());
		iterator.set(5, "price", entity.getPrice());
		iterator.set(6, "total_price", entity.getTotalPrice());
		iterator.set(7, "fuel_enum_fk", entity.getFuelEnum());
		iterator.set(8, "station_fk", entity.getStation());
	}

	@Override
	public void accept(IEntity entity, Visitor visitor) {
		visitor.visit((StationManagerReports) entity);
	}

	@Override
	public String getTableName() {
		return TableName;
	}

	@Override
	public List<IEntity> getForeignEntities(IEntity ientity) {
		StationManagerReports entity = (StationManagerReports) ientity;
		List<IEntity> list = new ArrayList<IEntity>();
		list.add(entity.getFuelEnum());
		list.add(entity.getStation());
		return list;
	}
}
