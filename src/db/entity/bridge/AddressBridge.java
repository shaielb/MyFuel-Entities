package db.entity.bridge;

import java.util.List;
import java.lang.Integer;
import db.interfaces.*;
import java.sql.SQLException;
import java.lang.String;
import annotations.AutoGenerated;
import java.util.ArrayList;
import db.entity.Address;
import visitor.Visitor;

@AutoGenerated
public class AddressBridge implements IEntityBridge {

	private static final String TableName = "address";

	private static Object _lock = new Object();
	private static AddressBridge _instance;
	
	private AddressBridge() {}

	public static AddressBridge getInstance() {
		if (_instance == null) {
			synchronized(_lock) {
				if (_instance == null) {
					_instance = new AddressBridge();
				}
			}
		}
		return _instance;
	}

	public IEntity createEntity() {
		return new Address();
	}

	@Override
	public void populateEntity(IEntity ientity, IGetValue<Integer, String, Object, Object> iterator) throws SQLException, InterruptedException {
		Address entity = (Address) ientity;
		entity.setId((Integer) iterator.get(0, "id", entity.getId()));
		entity.setCity((String) iterator.get(1, "city", entity.getCity()));
		entity.setStreet((String) iterator.get(2, "street", entity.getStreet()));
		entity.setHouse((String) iterator.get(3, "house", entity.getHouse()));
		entity.setFloor((Integer) iterator.get(4, "floor", entity.getFloor()));
		entity.setApartment((String) iterator.get(5, "apartment", entity.getApartment()));
	}

	@Override
	public void collectFromEntity(IEntity ientity, ISetValue<Integer, String, Object> iterator) throws SQLException, InterruptedException {
		Address entity = (Address) ientity;
		iterator.set(0, "id", entity.getId());
		iterator.set(1, "city", entity.getCity());
		iterator.set(2, "street", entity.getStreet());
		iterator.set(3, "house", entity.getHouse());
		iterator.set(4, "floor", entity.getFloor());
		iterator.set(5, "apartment", entity.getApartment());
	}

	@Override
	public void accept(IEntity entity, Visitor visitor) {
		visitor.visit((Address) entity);
	}

	@Override
	public String getTableName() {
		return TableName;
	}

	@Override
	public List<IEntity> getForeignEntities(IEntity ientity) {
		Address entity = (Address) ientity;
		List<IEntity> list = new ArrayList<IEntity>();

		return list;
	}
}
