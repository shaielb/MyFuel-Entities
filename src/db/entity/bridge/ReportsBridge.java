package db.entity.bridge;

import db.entity.Reports;
import java.lang.Integer;
import db.interfaces.*;
import java.sql.SQLException;
import java.lang.String;
import annotations.AutoGenerated;
import visitor.Visitor;

@AutoGenerated
public class ReportsBridge implements IEntityBridge {

	private static final String TableName = "reports";

	private static Object _lock = new Object();
	private static ReportsBridge _instance;
	
	private ReportsBridge() { }

	public static ReportsBridge getInstance() {
		if (_instance == null) {
			synchronized(_lock) {
				if (_instance == null) {
					_instance = new ReportsBridge();
				}
			}
		}
		return _instance;
	}

	@Override
	public void populateEntity(IEntity ientity, IGetValue<Integer, String, Object> iterator) throws SQLException, InterruptedException {
		Reports entity = (Reports) ientity;
		entity.setId((Integer) iterator.get(0, "id"));
		entity.setContant((String) iterator.get(1, "contant"));
	}

	@Override
	public void collectFromEntity(IEntity ientity, ISetValue<Integer, String, Object> iterator) throws SQLException, InterruptedException {
		Reports entity = (Reports) ientity;
		iterator.set(0, "id", entity.getId());
		iterator.set(1, "contant", entity.getContant());
	}

	@Override
	public void accept(IEntity entity, Visitor visitor) {
		visitor.visit((Reports) entity);
	}

	@Override
	public String getTableName() {
		return TableName;
	}
}
