package db.entity.bridge;

import java.util.List;
import java.lang.Integer;
import java.lang.Boolean;
import db.interfaces.*;
import db.entity.SpecialSalesEnum;
import java.lang.Double;
import db.entity.FuelCompanyEnum;
import java.sql.SQLException;
import java.lang.String;
import annotations.AutoGenerated;
import java.util.ArrayList;
import visitor.Visitor;

@AutoGenerated
public class SpecialSalesEnumBridge implements IEntityBridge {

	private static final String TableName = "special_sales_enum";

	private static Object _lock = new Object();
	private static SpecialSalesEnumBridge _instance;
	
	private SpecialSalesEnumBridge() {}

	public static SpecialSalesEnumBridge getInstance() {
		if (_instance == null) {
			synchronized(_lock) {
				if (_instance == null) {
					_instance = new SpecialSalesEnumBridge();
				}
			}
		}
		return _instance;
	}

	public IEntity createEntity() {
		return new SpecialSalesEnum();
	}

	@Override
	public void populateEntity(IEntity ientity, IGetValue<Integer, String, Object, Object> iterator) throws SQLException, InterruptedException {
		SpecialSalesEnum entity = (SpecialSalesEnum) ientity;
		entity.setId((Integer) iterator.get(0, "id", entity.getId()));
		entity.setSaleId((Integer) iterator.get(1, "sale_id", entity.getSaleId()));
		entity.setTitleKey((String) iterator.get(2, "title_key", entity.getTitleKey()));
		entity.setAmountLimitation((Double) iterator.get(3, "amount_limitation", entity.getAmountLimitation()));
		entity.setActiveSale((Boolean) iterator.get(4, "active_sale", entity.getActiveSale()));
		entity.setSaleDiscount((Double) iterator.get(5, "sale_discount", entity.getSaleDiscount()));
		entity.setFuelCompanyEnum((FuelCompanyEnum) iterator.get(6, "fuel_company_enum_fk", entity.getFuelCompanyEnum()));
	}

	@Override
	public void collectFromEntity(IEntity ientity, ISetValue<Integer, String, Object> iterator) throws SQLException, InterruptedException {
		SpecialSalesEnum entity = (SpecialSalesEnum) ientity;
		iterator.set(0, "id", entity.getId());
		iterator.set(1, "sale_id", entity.getSaleId());
		iterator.set(2, "title_key", entity.getTitleKey());
		iterator.set(3, "amount_limitation", entity.getAmountLimitation());
		iterator.set(4, "active_sale", entity.getActiveSale());
		iterator.set(5, "sale_discount", entity.getSaleDiscount());
		iterator.set(6, "fuel_company_enum_fk", entity.getFuelCompanyEnum());
	}

	@Override
	public void accept(IEntity entity, Visitor visitor) {
		visitor.visit((SpecialSalesEnum) entity);
	}

	@Override
	public String getTableName() {
		return TableName;
	}

	@Override
	public List<IEntity> getForeignEntities(IEntity ientity) {
		SpecialSalesEnum entity = (SpecialSalesEnum) ientity;
		List<IEntity> list = new ArrayList<IEntity>();
		list.add(entity.getFuelCompanyEnum());
		return list;
	}
}
