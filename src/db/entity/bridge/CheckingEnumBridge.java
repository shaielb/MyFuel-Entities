package db.entity.bridge;

import java.lang.Integer;
import db.interfaces.*;
import java.sql.SQLException;
import java.lang.String;
import annotations.AutoGenerated;
import visitor.Visitor;
import db.entity.CheckingEnum;

@AutoGenerated
public class CheckingEnumBridge implements IEntityBridge {

	private static final String TableName = "checking_enum";

	private static Object _lock = new Object();
	private static CheckingEnumBridge _instance;
	
	private CheckingEnumBridge() { }

	public static CheckingEnumBridge getInstance() {
		if (_instance == null) {
			synchronized(_lock) {
				if (_instance == null) {
					_instance = new CheckingEnumBridge();
				}
			}
		}
		return _instance;
	}

	@Override
	public void populateEntity(IEntity ientity, IGetValue<Integer, String, Object> iterator) throws SQLException, InterruptedException {
		CheckingEnum entity = (CheckingEnum) ientity;
		entity.setId((Integer) iterator.get(0, "id"));
		entity.setTitle((String) iterator.get(1, "title"));
	}

	@Override
	public void collectFromEntity(IEntity ientity, ISetValue<Integer, String, Object> iterator) throws SQLException, InterruptedException {
		CheckingEnum entity = (CheckingEnum) ientity;
		iterator.set(0, "id", entity.getId());
		iterator.set(1, "title", entity.getTitle());
	}

	@Override
	public void accept(IEntity entity, Visitor visitor) {
		visitor.visit((CheckingEnum) entity);
	}

	@Override
	public String getTableName() {
		return TableName;
	}
}
