package db.entity.bridge;

import java.util.List;
import java.lang.Integer;
import db.interfaces.*;
import db.entity.SpecialSalesHistory;
import db.entity.SpecialSalesEnum;
import java.sql.SQLException;
import annotations.AutoGenerated;
import java.util.ArrayList;
import java.sql.Timestamp;
import visitor.Visitor;

@AutoGenerated
public class SpecialSalesHistoryBridge implements IEntityBridge {

	private static final String TableName = "special_sales_history";

	private static Object _lock = new Object();
	private static SpecialSalesHistoryBridge _instance;
	
	private SpecialSalesHistoryBridge() {}

	public static SpecialSalesHistoryBridge getInstance() {
		if (_instance == null) {
			synchronized(_lock) {
				if (_instance == null) {
					_instance = new SpecialSalesHistoryBridge();
				}
			}
		}
		return _instance;
	}

	public IEntity createEntity() {
		return new SpecialSalesHistory();
	}

	@Override
	public void populateEntity(IEntity ientity, IGetValue<Integer, String, Object, Object> iterator) throws SQLException, InterruptedException {
		SpecialSalesHistory entity = (SpecialSalesHistory) ientity;
		entity.setId((Integer) iterator.get(0, "id", entity.getId()));
		entity.setStartTime((Timestamp) iterator.get(1, "start_time", entity.getStartTime()));
		entity.setEndTime((Timestamp) iterator.get(2, "end_time", entity.getEndTime()));
		entity.setSpecialSalesEnum((SpecialSalesEnum) iterator.get(3, "special_sales_enum_fk", entity.getSpecialSalesEnum()));
	}

	@Override
	public void collectFromEntity(IEntity ientity, ISetValue<Integer, String, Object> iterator) throws SQLException, InterruptedException {
		SpecialSalesHistory entity = (SpecialSalesHistory) ientity;
		iterator.set(0, "id", entity.getId());
		iterator.set(1, "start_time", entity.getStartTime());
		iterator.set(2, "end_time", entity.getEndTime());
		iterator.set(3, "special_sales_enum_fk", entity.getSpecialSalesEnum());
	}

	@Override
	public void accept(IEntity entity, Visitor visitor) {
		visitor.visit((SpecialSalesHistory) entity);
	}

	@Override
	public String getTableName() {
		return TableName;
	}

	@Override
	public List<IEntity> getForeignEntities(IEntity ientity) {
		SpecialSalesHistory entity = (SpecialSalesHistory) ientity;
		List<IEntity> list = new ArrayList<IEntity>();
		list.add(entity.getSpecialSalesEnum());
		return list;
	}
}
