package db.entity.bridge;

import java.util.List;
import db.entity.CustomersView;
import java.lang.Integer;
import db.interfaces.*;
import java.sql.SQLException;
import java.lang.String;
import annotations.AutoGenerated;
import java.util.ArrayList;
import visitor.Visitor;

@AutoGenerated
public class CustomersViewBridge implements IEntityBridge {

	private static final String TableName = "customers_view";

	private static Object _lock = new Object();
	private static CustomersViewBridge _instance;
	
	private CustomersViewBridge() {}

	public static CustomersViewBridge getInstance() {
		if (_instance == null) {
			synchronized(_lock) {
				if (_instance == null) {
					_instance = new CustomersViewBridge();
				}
			}
		}
		return _instance;
	}

	public IEntity createEntity() {
		return new CustomersView();
	}

	@Override
	public void populateEntity(IEntity ientity, IGetValue<Integer, String, Object, Object> iterator) throws SQLException, InterruptedException {
		CustomersView entity = (CustomersView) ientity;
		entity.setId((Integer) iterator.get(0, "id", entity.getId()));
		entity.setFirstName((String) iterator.get(1, "first_name", entity.getFirstName()));
		entity.setLastName((String) iterator.get(2, "last_name", entity.getLastName()));
		entity.setCity((String) iterator.get(3, "city", entity.getCity()));
		entity.setPhoneNumber((String) iterator.get(4, "phone_number", entity.getPhoneNumber()));
	}

	@Override
	public void collectFromEntity(IEntity ientity, ISetValue<Integer, String, Object> iterator) throws SQLException, InterruptedException {
		CustomersView entity = (CustomersView) ientity;
		iterator.set(0, "id", entity.getId());
		iterator.set(1, "first_name", entity.getFirstName());
		iterator.set(2, "last_name", entity.getLastName());
		iterator.set(3, "city", entity.getCity());
		iterator.set(4, "phone_number", entity.getPhoneNumber());
	}

	@Override
	public void accept(IEntity entity, Visitor visitor) {
		visitor.visit((CustomersView) entity);
	}

	@Override
	public String getTableName() {
		return TableName;
	}

	@Override
	public List<IEntity> getForeignEntities(IEntity ientity) {
		CustomersView entity = (CustomersView) ientity;
		List<IEntity> list = new ArrayList<IEntity>();

		return list;
	}
}
