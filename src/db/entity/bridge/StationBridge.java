package db.entity.bridge;

import java.util.List;
import java.lang.Integer;
import db.entity.Station;
import db.interfaces.*;
import db.entity.FuelCompanyEnum;
import java.sql.SQLException;
import java.lang.String;
import annotations.AutoGenerated;
import java.util.ArrayList;
import db.entity.Address;
import visitor.Visitor;

@AutoGenerated
public class StationBridge implements IEntityBridge {

	private static final String TableName = "station";

	private static Object _lock = new Object();
	private static StationBridge _instance;
	
	private StationBridge() {}

	public static StationBridge getInstance() {
		if (_instance == null) {
			synchronized(_lock) {
				if (_instance == null) {
					_instance = new StationBridge();
				}
			}
		}
		return _instance;
	}

	public IEntity createEntity() {
		return new Station();
	}

	@Override
	public void populateEntity(IEntity ientity, IGetValue<Integer, String, Object, Object> iterator) throws SQLException, InterruptedException {
		Station entity = (Station) ientity;
		entity.setId((Integer) iterator.get(0, "id", entity.getId()));
		entity.setStationName((String) iterator.get(1, "station_name", entity.getStationName()));
		entity.setPhoneNumber((String) iterator.get(2, "phone_number", entity.getPhoneNumber()));
		entity.setAddress((Address) iterator.get(3, "address_fk", entity.getAddress()));
		entity.setFuelCompanyEnum((FuelCompanyEnum) iterator.get(4, "fuel_company_enum_fk", entity.getFuelCompanyEnum()));
	}

	@Override
	public void collectFromEntity(IEntity ientity, ISetValue<Integer, String, Object> iterator) throws SQLException, InterruptedException {
		Station entity = (Station) ientity;
		iterator.set(0, "id", entity.getId());
		iterator.set(1, "station_name", entity.getStationName());
		iterator.set(2, "phone_number", entity.getPhoneNumber());
		iterator.set(3, "address_fk", entity.getAddress());
		iterator.set(4, "fuel_company_enum_fk", entity.getFuelCompanyEnum());
	}

	@Override
	public void accept(IEntity entity, Visitor visitor) {
		visitor.visit((Station) entity);
	}

	@Override
	public String getTableName() {
		return TableName;
	}

	@Override
	public List<IEntity> getForeignEntities(IEntity ientity) {
		Station entity = (Station) ientity;
		List<IEntity> list = new ArrayList<IEntity>();
		list.add(entity.getAddress());
		list.add(entity.getFuelCompanyEnum());
		return list;
	}
}
