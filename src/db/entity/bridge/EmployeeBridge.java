package db.entity.bridge;

import java.lang.Integer;
import db.interfaces.*;
import db.entity.FuelCompanyEnum;
import java.sql.SQLException;
import annotations.AutoGenerated;
import java.util.ArrayList;
import visitor.Visitor;
import java.util.List;
import db.entity.Station;
import db.entity.Employee;
import db.entity.SystemUser;
import java.lang.String;
import db.entity.Person;

@AutoGenerated
public class EmployeeBridge implements IEntityBridge {

	private static final String TableName = "employee";

	private static Object _lock = new Object();
	private static EmployeeBridge _instance;
	
	private EmployeeBridge() {}

	public static EmployeeBridge getInstance() {
		if (_instance == null) {
			synchronized(_lock) {
				if (_instance == null) {
					_instance = new EmployeeBridge();
				}
			}
		}
		return _instance;
	}

	public IEntity createEntity() {
		return new Employee();
	}

	@Override
	public void populateEntity(IEntity ientity, IGetValue<Integer, String, Object, Object> iterator) throws SQLException, InterruptedException {
		Employee entity = (Employee) ientity;
		entity.setId((Integer) iterator.get(0, "id", entity.getId()));
		entity.setEmployeeRole((String) iterator.get(1, "employee_role", entity.getEmployeeRole()));
		entity.setAffiliation((String) iterator.get(2, "affiliation", entity.getAffiliation()));
		entity.setEmployeeNum((Integer) iterator.get(3, "employee_num", entity.getEmployeeNum()));
		entity.setPerson((Person) iterator.get(4, "person_fk", entity.getPerson()));
		entity.setStation((Station) iterator.get(5, "station_fk", entity.getStation()));
		entity.setSystemUser((SystemUser) iterator.get(6, "system_user_fk", entity.getSystemUser()));
		entity.setFuelCompanyEnum((FuelCompanyEnum) iterator.get(7, "fuel_company_enum_fk", entity.getFuelCompanyEnum()));
	}

	@Override
	public void collectFromEntity(IEntity ientity, ISetValue<Integer, String, Object> iterator) throws SQLException, InterruptedException {
		Employee entity = (Employee) ientity;
		iterator.set(0, "id", entity.getId());
		iterator.set(1, "employee_role", entity.getEmployeeRole());
		iterator.set(2, "affiliation", entity.getAffiliation());
		iterator.set(3, "employee_num", entity.getEmployeeNum());
		iterator.set(4, "person_fk", entity.getPerson());
		iterator.set(5, "station_fk", entity.getStation());
		iterator.set(6, "system_user_fk", entity.getSystemUser());
		iterator.set(7, "fuel_company_enum_fk", entity.getFuelCompanyEnum());
	}

	@Override
	public void accept(IEntity entity, Visitor visitor) {
		visitor.visit((Employee) entity);
	}

	@Override
	public String getTableName() {
		return TableName;
	}

	@Override
	public List<IEntity> getForeignEntities(IEntity ientity) {
		Employee entity = (Employee) ientity;
		List<IEntity> list = new ArrayList<IEntity>();
		list.add(entity.getPerson());
		list.add(entity.getStation());
		list.add(entity.getSystemUser());
		list.add(entity.getFuelCompanyEnum());
		return list;
	}
}
