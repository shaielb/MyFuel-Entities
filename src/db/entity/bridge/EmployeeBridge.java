package db.entity.bridge;

import java.lang.Integer;
import db.interfaces.*;
import db.entity.Employee;
import java.sql.SQLException;
import java.lang.String;
import annotations.AutoGenerated;
import visitor.Visitor;

@AutoGenerated
public class EmployeeBridge implements IEntityBridge {

	private static final String TableName = "employee";

	private static Object _lock = new Object();
	private static EmployeeBridge _instance;
	
	private EmployeeBridge() { }

	public static EmployeeBridge getInstance() {
		if (_instance == null) {
			synchronized(_lock) {
				if (_instance == null) {
					_instance = new EmployeeBridge();
				}
			}
		}
		return _instance;
	}

	@Override
	public void populateEntity(IEntity ientity, IGetValue<Integer, String, Object> iterator) throws SQLException, InterruptedException {
		Employee entity = (Employee) ientity;
		entity.setId((Integer) iterator.get(0, "id"));
		entity.setFirstName((String) iterator.get(1, "first_name"));
		entity.setLastName((String) iterator.get(2, "last_name"));
		entity.setEmployeeId((String) iterator.get(3, "employee_id"));
		entity.setEmail((String) iterator.get(4, "email"));
		entity.setPosition((String) iterator.get(5, "position"));
		entity.setOrganizationName((String) iterator.get(6, "organization_name"));
	}

	@Override
	public void collectFromEntity(IEntity ientity, ISetValue<Integer, String, Object> iterator) throws SQLException, InterruptedException {
		Employee entity = (Employee) ientity;
		iterator.set(0, "id", entity.getId());
		iterator.set(1, "first_name", entity.getFirstName());
		iterator.set(2, "last_name", entity.getLastName());
		iterator.set(3, "employee_id", entity.getEmployeeId());
		iterator.set(4, "email", entity.getEmail());
		iterator.set(5, "position", entity.getPosition());
		iterator.set(6, "organization_name", entity.getOrganizationName());
	}

	@Override
	public void accept(IEntity entity, Visitor visitor) {
		visitor.visit((Employee) entity);
	}

	@Override
	public String getTableName() {
		return TableName;
	}
}
